syntax = "proto3";

/*
    the following line tells the protobuff compiler to create a package in the given path
*/
option go_package = "github.com/tanerius/dungeonforge/src/lobby";

// Define the gRPC service with necessary RPC calls
service Lobby {
    rpc Login(UserLoginRequest) returns (LoginResponse);
    rpc RefreshToken(TokenRequest) returns (LoginResponse);
    rpc JoinLobby(TokenRequest) returns (JoinResponse);
    rpc LeaveLobby(TokenRequest) returns (LeaveResponse);
    rpc GetUsers(TokenRequest) returns (UserListResponse);
    rpc Register(NewUserMessage) returns (LoginResponse);
    rpc Roll(RollRequest) returns (RollResponse);
}

message BaseResponse {
    int64 responseCode = 1;
    int64 apiVersion = 2;
    optional string errorMsg = 3;
}

message RegisterRequest {
    string username = 1;
    string password = 2;
    string displayname = 3;
    string email = 4;
}

message RollRequest {
    int64 dice = 1;
    int64 sides = 2;
}

message RollResponse {
    BaseResponse response = 1;
    repeated int64 value = 2;
}

message UserLoginRequest {
    string username = 1;
    string password = 2;
}

message TokenRequest {
    string token = 1;
}

message LobbyInfo {
    string id = 1;
    int64 usersOnline = 2;
}

message NewUserMessage {
    string username = 1;
    string email = 2;
    string password = 3;
}

message UserEntry {
    string id = 1;
    string displayname = 2;
    optional string email = 3;
    optional bool isOnline = 4;
    optional bool isValidated = 5;
    optional string image = 6; 
}

message TokenResponse {
    string accessToken = 1;
    int64 accessTokenExpiresIn = 2; // Validity period in seconds
    optional string refreshToken = 3;
    optional int64 refreshTokenExpiresIn = 4; // Validity period in seconds
}

// Response to a login request including tokens and their validity
message LoginResponse {
    BaseResponse response = 1;
    optional TokenResponse tokens = 2;
    optional UserEntry user = 3;
}

message JoinResponse {
    BaseResponse response = 1;
    optional LobbyInfo info = 2;
    optional string motd = 3;
}

message LeaveResponse {
    BaseResponse response = 1;
    optional string message = 2;
}

message UserListResponse {
    BaseResponse response = 1;
    repeated UserEntry users = 2;
}